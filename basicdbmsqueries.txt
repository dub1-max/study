Here are some queries and syntax examples for SQL DDL, DML, and TCL commands:

### 1. **DDL (Data Definition Language)**

DDL commands define the structure of the database, including creating, altering, and deleting tables.

- **CREATE TABLE**: Defines a new table in the database.
    ```sql
    CREATE TABLE Employees (
        EmployeeID INT PRIMARY KEY,
        FirstName VARCHAR(50),
        LastName VARCHAR(50),
        Age INT,
        Department VARCHAR(50)
    );
    ```

- **ALTER TABLE**: Modifies an existing table, such as adding or removing columns.
    ```sql
    ALTER TABLE Employees 
    ADD Salary DECIMAL(10, 2);
    ```

- **DROP TABLE**: Deletes a table and all its data.
    ```sql
    DROP TABLE Employees;
    ```

- **TRUNCATE TABLE**: Deletes all records from a table, but keeps the structure.
    ```sql
    TRUNCATE TABLE Employees;
    ```
----------------------------------------------------------------------------------------------------------------------------

### 2. **DML (Data Manipulation Language)**

DML commands allow you to manipulate data within the database.

- **INSERT INTO**: Adds new data into a table.
    ```sql
    INSERT INTO Employees (EmployeeID, FirstName, LastName, Age, Department, Salary)
    VALUES (1, 'John', 'Doe', 30, 'Sales', 50000.00);
    ```

- **UPDATE**: Modifies existing data in a table.
    ```sql
    UPDATE Employees
    SET Salary = 55000.00
    WHERE EmployeeID = 1;
    ```

- **DELETE**: Removes data from a table.
    ```sql
    DELETE FROM Employees
    WHERE EmployeeID = 1;
    ```

- **SELECT**: Retrieves data from one or more tables.
    ```sql
    SELECT * FROM Employees;
    ```

---------------------------------------------------------------------------------------------------------------------------

### 3. **TCL (Transaction Control Language)**

TCL commands manage the changes made by DML statements, often used to ensure data integrity.

- **BEGIN TRANSACTION**: Marks the start of a transaction.
    ```sql
    BEGIN TRANSACTION;
    ```

- **COMMIT**: Saves all changes made in the current transaction.
    ```sql
    COMMIT;
    ```

- **ROLLBACK**: Reverts changes made in the current transaction.
    ```sql
    ROLLBACK;
    ```

- **SAVEPOINT**: Sets a point within a transaction to which you can later roll back.
    ```sql
    SAVEPOINT Savepoint1;
    ```

- **ROLLBACK TO SAVEPOINT**: Rolls back to a specified savepoint.
    ```sql
    ROLLBACK TO Savepoint1;
    ```

These commands cover the basic usage and syntax for DDL, DML, and TCL in SQL.